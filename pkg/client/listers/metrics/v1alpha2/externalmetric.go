// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/Azure/azure-k8s-metrics-adapter/pkg/apis/metrics/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExternalMetricLister helps list ExternalMetrics.
type ExternalMetricLister interface {
	// List lists all ExternalMetrics in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.ExternalMetric, err error)
	// ExternalMetrics returns an object that can list and get ExternalMetrics.
	ExternalMetrics(namespace string) ExternalMetricNamespaceLister
	ExternalMetricListerExpansion
}

// externalMetricLister implements the ExternalMetricLister interface.
type externalMetricLister struct {
	indexer cache.Indexer
}

// NewExternalMetricLister returns a new ExternalMetricLister.
func NewExternalMetricLister(indexer cache.Indexer) ExternalMetricLister {
	return &externalMetricLister{indexer: indexer}
}

// List lists all ExternalMetrics in the indexer.
func (s *externalMetricLister) List(selector labels.Selector) (ret []*v1alpha2.ExternalMetric, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ExternalMetric))
	})
	return ret, err
}

// ExternalMetrics returns an object that can list and get ExternalMetrics.
func (s *externalMetricLister) ExternalMetrics(namespace string) ExternalMetricNamespaceLister {
	return externalMetricNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExternalMetricNamespaceLister helps list and get ExternalMetrics.
type ExternalMetricNamespaceLister interface {
	// List lists all ExternalMetrics in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.ExternalMetric, err error)
	// Get retrieves the ExternalMetric from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.ExternalMetric, error)
	ExternalMetricNamespaceListerExpansion
}

// externalMetricNamespaceLister implements the ExternalMetricNamespaceLister
// interface.
type externalMetricNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExternalMetrics in the indexer for a given namespace.
func (s externalMetricNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.ExternalMetric, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.ExternalMetric))
	})
	return ret, err
}

// Get retrieves the ExternalMetric from the indexer for a given namespace and name.
func (s externalMetricNamespaceLister) Get(name string) (*v1alpha2.ExternalMetric, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("externalmetric"), name)
	}
	return obj.(*v1alpha2.ExternalMetric), nil
}
